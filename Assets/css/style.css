
* {
  font-family: 'Optima', 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

/* Creating class :root to be referenced throughout css so that colors do not have to be typed in
repetedly. */
:root {
  --darkpurp: #2E1114;
  --darkplum: #501B1D;
  --mutedpurp: #64485C;
  --lightpurp: #83677B;
  --gray: #e0e0e0;
}

body {
  background-color: whitesmoke;
}

/* Below we are styling the Header */

header {
    display: flex;
    background-image: linear-gradient(30deg, #dbe6f6, #a77b75);
    color:  var(--gray);
    padding: 40px 0 40px 0;
    flex-wrap: wrap;
    justify-content: space-between;
}

header h1 {
  text-align: center;
  font-size: 35px;
  background-color: var(--lightpurp);
  padding:10px;
  width: 30%;
  box-shadow:20px 20px 50px var(--darkpurp);
}

nav {
  display: flex;
  align-items: center;
}

nav ul {
  display:flex;
  justify-content: space-around;
  min-width: 370px;
  
}
  
nav a {
    color: var(--gray);
    text-decoration: none;
    border-bottom: 2px var(--gray) solid;
    padding: 0px 4px 2px 4px;
} 

nav a:hover {
  color:var(--lightpurp);
  border-bottom:none;
  font-size:105%;
  font-weight: bold;
}

.header-image {
  height: 200px;
  width: 100%;
  margin-bottom: 25px;
  background-image: url("../images/backgroundimage.jpg");
  background-size: cover;
  background-position: center;
}

.header-image h2 {
  float:right;
  margin: 150px 50px 10px 0;
  color: #ADADAD;
  font-size: 25px;
}

/* Want all the headings to follow the same styling, so created one class for all headings: About Me, Work, and Contact Me */

.headings {
  color:var(--darkplum);
  text-align: right;
  margin: 2px 2px 2px 2px;
  padding: 0 10px 0 50px;
  font-size: 50px;
  width: 30%;
}

/* Here we are styling the "About Me" section. We want this to display as a flex so that the content shares the space of the screen, with
the heading on the elft, and content on the right. */

.article {
  display: flex;
  margin-top: 25px;
} 

.article-container {
  display: flex;
  flex-direction: column;
  align-items:center;
  width:70%;
  border-left: 4px var(--darkplum) solid;
  padding: 0 30px 0 30px;
}

.article-container img {
  margin: 8px 0 22px 0;
  border: 6px var(--lightpurp) solid;
}

.article p {
  padding: 0px 15px 0px 15px;
  letter-spacing: 1px;
  line-height: 1.8;
}

/* Below we are styling the "Work" section. Making it a flex property so that the heading and the section to the right of it are
on the same row (similar to what was done with the article/About Me section */

.work {
  display: flex;
  margin-top: 25px;
}

/* Project section containing the project tiles is set to flex so that the individual projects stack side-by-side (with the exception of
the first project which we want to take up the entire width of the box to indicate it's significance. */
.projects {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  border-left:  4px var(--darkplum) solid;
  padding: 0px 30px 10px 30px;
  width:70%;
}

/* Setting project 1 width to 100% so it takes up th first flex row to indicate that it is the most
significant project. The other projects will flex down to the next row. */
.project1 {
  width: 100%;
}

/* Here we are making sure the titles and subtitles on each project tile are positioned properly by using the position of relative. We
create this class for the a elements because the a is the parent element that contains the h and p title & subtitles. */
.project1 a, .project2 a, .project3 a {
  position:relative;
  text-align:center;
}

/* We are styling the title for each project here with the .project-title class and .subtitle class. */
.project-title {
  position: absolute;
  bottom:20px;
  text-align: left;
  padding: 8px 30px 0px 10px;
  margin-left:0;
  font-size: 95%;
  background-color: var(--darkplum);
  color: whitesmoke;
}

.subtitle {
  font-size: 80%;
  line-height: 2.4;
}

/* Setting all of the photos in work section to have an opacity, and then clearing the opacity when hovered over. */

.project1, .project2, .project3{
  padding: 10px 10px 10px 10px;
  opacity:0.8;
}

.project1:hover, .project2:hover, .project3:hover{
  opacity:1;
}

/* Project 1 & 2 are set to a width of 50% in the flex container so they share the row. */

 .project2, .project3 {
   width: 50%;
 }

 .project1 img, .project2 img, .project3 img {
  width:100%;
  height:100%;
  flex: 0 2 100%;
  border-style: solid;
  border-color: var(--lightpurp);
 }

/* Below we are styling the footer section. This section will follow same basic css styling as the 
previous two sections, with a flex property to make sure the section title is on the left and the rest of the contents to the right.*/

footer {
  display: flex;
  margin-top: 25px;
  margin-bottom: 20px;
}

/* The footer unordered list is made to display as flex so that the list items are spaced evenly in a row across the container. */
footer ul {
  display: flex;
  justify-content: space-around;
  width: 70%;
  list-style: none ;
  border-left:  4px var(--darkplum) solid;
  padding: 60px 0 60px 0px;
}

footer ul li {
  width: auto;
  padding-left: 0;
  margin-left:0;
}

footer ul li a {
  color:var(--darkplum);
  font-weight: bold;
  padding: 0px 10px 4px 10px;
  text-decoration: none;
  border-bottom: 2px var(--darkplum) solid;
  padding: 0px 4px 2px 4px;
}

/* Making the individual contact me list items get larger and remove underline when hovered over. */

footer ul li a:hover {
  color:var(--mutedpurp);
  border-bottom:none;
  font-size:105%;
  font-weight: bold;
}

/* Want each section to adjust with different screen resolutions. */

@media screen and (max-width: 768px) {

header {
  padding: 20px 0 20px 0;
}

header h1{
  flex:auto;
  text-align: center;
  background-color: transparent;
  border-bottom:none;
}

nav ul {
  margin-top:10px;
  flex:auto;
  text-align:center;
}

/* Want each section to adjust with smaller screens. To do this, we need the content to be a flex and to
have a flex-direction of wrap so that the content wraps downward with the screen shrinking. */

.article, .work, footer {
  display: flex;
  flex-wrap: wrap;
}

/* Want the headings (About Me, Work, and Contact Me) to move to the top of the section with smaller screens. */
/* To do this, we make their width 100% so they fit the whole width of the screen. */

.headings {
width: 100%;
text-align: center;
align-items: stretch;
padding: 0 0 10px 0;
}

.article-container {
  width: 100%;
  margin-top: 0px;
  margin-bottom: 0px;
  margin-left: 20px;
  margin-right: 0;
  padding: 0 10px 0 10px;
}

.article p {
  font-size: 85%;
  padding: 0 8px 0 8px;
}

.projects {
  flex-wrap:wrap;
  width: 100%;
  margin-top: 0px;
  margin-bottom: 0px;
  margin-left: 20px;
  margin-right: 20px;
}

.projects a {
  display:flex;
  flex-direction:row;
  font-size: 80%;
}

/* Below the individual project titles and subtitles are styled so that they shrink in fontsize & container size when the screen
reached smaller resolutions. */

.project-title {
  padding: 6px 18px 6px 6px;
}

.subtitle {
  line-height: 1.6;
  font-size: 10%;
}

/* Making the width of the nav in the header, the projects 2 & 3, and the footer unordered list take up the full width of the screen
with smaller screen sizes.  */

nav, .project2, .project3, footer ul {
  width: 100%;
}

/* Here, the list of contact methods turns into a column-list in a smaller screen, and now takes up the whole width of the screen. */
footer ul {
  display: flex;
  flex-direction: column;
  text-align: center;
  width: 100%;
  margin-top: 0px;
  margin-bottom: 0px;
  margin-left: 20px;
  margin-right: 20px;
}

footer ul li {
  padding: 5px 0 5px 0;
}

}